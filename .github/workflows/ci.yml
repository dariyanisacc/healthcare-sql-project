name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: healthcare_clinical
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install PostgreSQL client
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client-16

    - name: Install pgTAP
      run: |
        sudo apt-get install -y libtap-parser-sourcehandler-pgtap-perl
        PGPASSWORD=postgres psql -h localhost -U postgres -d healthcare_clinical -c "CREATE EXTENSION IF NOT EXISTS pgtap;"

    - name: Create schema
      env:
        PGPASSWORD: postgres
      run: |
        psql -h localhost -U postgres -d healthcare_clinical -f sql/01_schema.sql
        psql -h localhost -U postgres -d healthcare_clinical -f sql/02_indexes.sql

    - name: Generate synthetic data
      run: |
        cd scripts
        python generate_data.py
        python generate_encounters.py
        cd ..

    - name: Load test data
      env:
        PGPASSWORD: postgres
      run: |
        psql -h localhost -U postgres -d healthcare_clinical -f sql/03_seed.sql

    - name: Create views
      env:
        PGPASSWORD: postgres
      run: |
        psql -h localhost -U postgres -d healthcare_clinical -f sql/04_views.sql

    - name: Run schema tests
      env:
        PGPASSWORD: postgres
      run: |
        psql -h localhost -U postgres -d healthcare_clinical -f tests/test_schema.sql

    - name: Run data integrity tests
      env:
        PGPASSWORD: postgres
      run: |
        psql -h localhost -U postgres -d healthcare_clinical -f tests/test_data_integrity.sql

    - name: Run demo queries
      env:
        PGPASSWORD: postgres
      run: |
        psql -h localhost -U postgres -d healthcare_clinical -f sql/05_demo_queries.sql > query_results.txt
        echo "Demo queries executed successfully"

    - name: Upload query results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: query-results
        path: query_results.txt

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort

    - name: Run flake8
      run: |
        flake8 scripts/ --max-line-length=120 --ignore=E203,W503

    - name: Check code formatting with black
      run: |
        black --check scripts/

    - name: Check import sorting with isort
      run: |
        isort --check-only scripts/